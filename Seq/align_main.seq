import sys
import getopt
import os
from common import *
from align import *



def bucket_alignments_extern(bed_path,nbins,output_dir, extends):
    files = list[str]()    
    hits = list[Hit]() # vector of hits
    #map<string, FILE *> tmp_bins;
	#map<string, int> lens;
    tmp_bins = dict[str,int]()
    lens = dict[str,int]()
    ix = 0
    total_nhits=0
    for file in files:
        f = open(file,"r")
        nhits = 0;
        for s in f.readline():
            h = Hit.from_bed(s)
            e = Extend()
            if(extends):
                h.extends(e.RATIO,e.MAX_EXTEND)
            
            #assert()
            #assert()
            if(h.query.name > h.ref.name and h.query_start > h.ref_start and h.query_end > h.ref_end):
                temp = h.query.name
                h.query.name = h.ref.name
                h.ref.name = temp

                temp = h.query_start
                h.query_start = h.ref_start
                h.ref_start = temp

                temp = h.query_end
                h.query_end = h.ref_end
                h.ref_end = temp
            
            fno = output_dir + "/tmp_" + h.query.name + "_" + h.ref.name + ".tmp"
            if fno not in tmp_bins:
                tmp_bins[fno]

            else:    
                it = tmp_bins.get(fno)
                








def align_main(opts,args):

    command =args[0]
    if command == "bucket":
        nbins = -1
        for o,a in opts:
            if o in ("-n","--bins"):
                nbins = int(a)
        if nbins == -1:
            print("Must provide number of bins (--bins)")
            sys.exit(0)	
        #bucket_alignments_extern("chr22.fa",nbins,"hello",True)#(cmdl[1], nbins, cmdl[2], true);
    elif command == "generate":
        kmer_size = -1
        for o,a in opts:
            if o in ("-k","--kmer"):
                kmer_size = int(a)
        if kmer_size == -1:
            print("Must provide k-mer size (--kmer)")
            sys.exit(0)
		
	    # generate_alignments(cmdl[1], cmdl[2], kmer_size);		
