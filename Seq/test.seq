from hash import *
import collections
from bio import CIGAR
from align import *
from globals import *
from hit import *
import math
from merge import *
from time import *
# s = Sequence("query","ACGTT",True)
# r = Sequence("ref","TGCAA",True)
# a = Alignment()
# h = Hit(s,15,20,s,150,200,0,"","")
# #extend(h,2.0,300)
# print(h.query_start)
# h.extends(2.0,300)
# print(h.ref_start)
# print(h.ref_end)
line = "chr11   108692452   108693443   chr2    100986072   100987075       18.9    +   +   1003    1024    104M1I126M2D114M10I85M4I29M15I26M1I103M4D22M15D301M2I60M    m=13.7;g=5.3"
# cols = line.split()
# name = "5M"
# cig = CIGAR(name)
# e = Extend()
# x = Hit.from_bed(line)
# y = Hit.from_bed(line)
# xy = list[Hit]()
# xy.append(x)
# xy.append(y)
# xy = merge(xy,e.MERGE_DIST)
# print(xy[0].query_start)
# print(len("yes"))
# ints = [1,0]
# print(3 %2)
# x = list[File]()
# f = open("test.txt","w")
# x.append(f)
# print(x[0])
# x = time()
# print("hello")
# y = time()
# print(y-x)
# x = dict[str, int]()
# x.find("h")
# print("hel")
# x = [-1]*10
# # for s in x:
# #     print(s)
# print(len(x))
# x = tuple[int,int](2,5)
# y = tuple[int,int](2,5)
print(x < y)

# while(i < len(xy)):
#     i+=1
# print(a.span())
# f = open("test.txt","w")
# f.close()
# # # print(h.query.name)

# a = Alignment("ACGTT","TGCAA", cig)
# # a.populate_nice_alignment()
# # print(a.alignment)
# #cig.remove(1)
# back = str(1)+'A'
# print(back)
# alig = Align()
# #print(alig.MATCH)
# # alignment = s"ACGT"
# # print(int(alignment.as_int()))
# a = s'ACGT'
# print(len(a))
# x = int(math.sqrt(float(5)))
# print(x/1000)
# m = dict[int,int]()
# if(5 in m):

#     m[5]+=1
# else:
#     m[5]=1
# print(m[5])
# x = s"ACGTT"
# y = s"TGCAA"
# aln = x @ y
# print(aln.cigar)

# x = dict[str,str]()
# x["yes"] = "Hello"
# for i in x.keys():
#     print(i)

# c = float(int(math.sqrt(float(100-65)*float(33-6))))
# c = c/1000
# print(c)